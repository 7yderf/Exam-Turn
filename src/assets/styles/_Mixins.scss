@mixin for-size($size) {
  @if $size == phone {
    @media (max-width: 320px) {
      @content;
    }
  } @else if $size == phone-mid {
    @media (max-width: 375px) {
      @content;
    }
  } @else if $size == phone-big {
    @media (max-width: 425px) {
      @content;
    }
  } @else if $size == phone-xbig {
    @media (max-width: 535px) {
      @content;
    }
  } @else if $size == tablet-small {
    @media (max-width: 635px) {
      @content;
    }
  } @else if $size == tablet-portrait {
    @media (max-width: 768px) {
      @content;
    }
  } @else if $size == tablet-landscape {
    @media (max-width: 991px) {
      @content;
    }
  } @else if $size == desktop {
    @media (max-width: 1024px) {
      @content;
    }
  } @else if $size == desktop-mid {
    @media (max-width: 1200px) {
      @content;
    }
  } @else if $size == desktop-mid-big {
    @media (max-width: 1320px) {
      @content;
    }
  } @else if $size == desktop-big {
    @media (max-width: 1400px) {
      @content;
    }
  } @else if $size == desktop-xbig {
    @media (max-width: 1920px) {
      @content;
    }
  }
}
@mixin flex($justify:center, $gap: false, $alignItems: center) {
  display: flex;
  justify-content: $justify;
  align-items: $alignItems;
  @if $gap {
    gap: $gap;
  }
}
@mixin grid($columns, $gap) {
  display: grid;
  grid-template-columns: $columns;
  gap: $gap;
}
@mixin text($size, $weight: initial, $line-height: initial, $align: initial) {
  font-style: normal;
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  text-align: $align;
}
@mixin content($width: 1500px, $padding: 0 16px) {
  display: block;
  width: 100%;
  max-width: $width;
  margin: 0 auto;
  padding: $padding;
}
@mixin background-img($image) {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  background-image: $image;
}

@mixin load(){
  background: linear-gradient(
      90deg,
      rgba(221, 221, 221, 0.6) 8%,
      rgba(238, 238, 238, 0.6) 25%,
      rgba(221, 221, 221, 0.6) 50%
    );
    animation: backgroundPulse forwards 7s linear infinite;
}

@mixin button($type: solid, $width: 250px) {
  @if $type == solid {
    --bg-color: var(--primary-color);
    --shadow: 0px 8px 20px rgba(107, 107, 107, 0.25);
    --shadow-hover: none;
    --text: var(--text-contrast-color);
    --bg-hover-color: #1f1f1f;
    color:  var(--text-contrast-color);
  } @else if $type == outline {
    --bg-color: var(--text-contrast-color);
    --shadow: none;
    --shadow-hover: 0px 8px 20px rgba(107, 107, 107, 0.25);
    --text: var(--text-color);
    color:var(--text-color);
    --bg-hover-color: var(--bg-color);
    border: 1px solid var(--primary-color);;
  }
  @include flex(center, 10px);
  @include text(1.4rem, 500, 1.8rem, center);
  width: 100%;
  max-width: $width;
  height: 45px;
  padding: 10px 20px;
  background-color: var(--bg-color);
  
  text-decoration: none;
  box-shadow: var(--shadow);
  border-radius: 1px;
  transition: all 0.1s linear;
  will-change: auto;
  &--right {
    flex-direction: row-reverse;
  }
  &:not(:disabled):hover {
    cursor: pointer;
    background-color: var(--bg-hover-color);
    box-shadow: var(--shadow-hover);
  }
  &:not(:disabled):active {
    box-shadow: none;
  }
  &:active {
    transform: translateY(0);
  }
  &:disabled {
    cursor: default;
    opacity: .3;
  }
}

@mixin border($color: black, $radius: 0, $style: solid, $width: 1px){
  border: $width $style $color;
  border-radius: $radius;
}

@keyframes backgroundPulse {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 100em 0;
  }
}